<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conceptId">
 <title>Conduits</title>
 <conbody>
  <p>Conduits is a solution to the streaming data problem. It fits the same solution space as
   enumerators, in that we want to have deterministic resource handling, constant memory usage, and
   composability. However, conduits have been designed based on a huge amount of experience using
   enumerators in real life projects. They intend to solve the same problems in a simpler, more
   robust way.</p>
  <p>This post is not intended to be a detailed comparison between enumerators and conduits, though
   it will be impossible to avoid some comparison. Instead, the goal is to explain the design
   decisions and usage of conduits, and give enough information that a reader familiar with both
   concepts can draw his/her own conclusions. In addition, the README file of the <xref
    href="https://github.com/snoyberg/conduit" format="html" scope="external">conduit repo on
    Github</xref> provides some of the motivation for conduits.</p>
  <p>Note that this article will assume an understanding of the Resource monad transformer, which
   was described in a <xref href="http://www.yesodweb.com/blog/2011/12/resourcet" format="html"
    scope="external">previous article</xref>.</p>
 </conbody>
</concept>
