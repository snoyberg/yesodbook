<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="configuration"><title id="x-1">Configuration</title><conbody id="x-2"><p id="config1">In general, Nginx will listen on port 80 and your Yesod/Warp app will listen on some unprivileged port (lets say 4321). You will then need to provide a nginx.conf file, such as:</p><codeblock outputclass="nginx-conf" id="x1">daemon off; # Don't run nginx in the background, good for monitoring apps
events {
    worker_connections 4096;
}

http {
    server {
        listen 80; # Incoming port for Nginx
        server_name www.myserver.com;
        location / {
            proxy_pass http://127.0.0.1:4321; # Reverse proxy to your Yesod app
        }
    }
}</codeblock><p id="config2">You can add as many server blocks as you like. A common addition is to ensure users always access your pages with the www prefix on the domain name, ensuring the RESTful principle of canonical URLs. (You could just as easily do the opposite and always strip the www, just make sure that your choice is reflected in both the nginx config and the approot of your site.) In this case, we would add the block:</p><codeblock outputclass="nginx-conf" id="x2">server {
    listen 80;
    server_name myserver.com;
    rewrite ^/(.*) http://www.myserver.com/$1 permanent;
}</codeblock><p id="config3">A highly recommended optimization is to serve static files from a separate domain
            name, therefore bypassing the cookie transfer overhead. Assuming that our static files
            are stored in the <codeph id="x3">static</codeph> folder within our site folder, and the
            site folder is located at <codeph id="x4">/home/michael/sites/mysite</codeph>, this
            would look like:</p><codeblock outputclass="nginx-conf" id="x5">server {
    listen 80;
    server_name static.myserver.com;
    root /home/michael/sites/mysite/static;
    # Since yesod-static appends a content hash in the query string,
    # we are free to set expiration dates far in the future without
    # concerns of stale content.
    expires max;
}</codeblock><p id="config4">In order for this to work, your site must properly rewrite static URLs to this
            alternate domain name. The scaffolded site is set up to make this fairly simple via the
                <codeph>Settings.staticRoot</codeph> function and the definition of
                <codeph>urlRenderOverride</codeph>. However, if you just want to get the benefit of
            nginx's faster static file serving without dealing with separate domain names, you can
            instead modify your original server block like so:</p><codeblock outputclass="nginx-conf" id="x6">server {
    listen 80; # Incoming port for Nginx
    server_name www.myserver.com;
    location / {
        proxy_pass http://127.0.0.1:4321; # Reverse proxy to your Yesod app
    }
    location /static {
        root /home/michael/sites/mysite; # Notice that we do *not* include /static
        expires max;
    }
}</codeblock></conbody></concept>