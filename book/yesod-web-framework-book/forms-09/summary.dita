<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conceptId">
 <title id="x-1">Summary</title>
 <conbody id="x-2">
  <p id="x-3">Forms in Yesod are broken up into three groups. Applicative is the most common, as it provides
   a nice user interface with an easy-to-use API. Monadic forms give you more power, but are harder
   to use. Input forms are intended when you just want to read data from the user, not generate the
   input widgets.</p>
  <p id="x-4">There are a number of different <codeph id="x-5">Field</codeph>s provided by Yesod out-of-the-box. In
   order to use these in your forms, you need to indicate the kind of form and whether the field is
   required or optional. The result is six helper functions: <codeph id="x-6">areq</codeph>,
    <codeph id="x-7">aopt</codeph>, <codeph id="x-8">mreq</codeph>, <codeph id="x-9">mopt</codeph>, <codeph id="x-10">ireq</codeph>, and
    <codeph id="x-11">iopt</codeph>.</p>
  <p id="x-12">Forms have significant power available. They can automatically insert Javascript to help you
   leverage nicer UI controls, such as a jQuery UI date picker. Forms are also fully i18n-ready, so
   you can support a global community of users. And when you have more specific needs, you can slap
   on some validation functions to an existing field, or write a new one from scratch.</p>
 </conbody>
</concept>
