<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conceptId">
 <title>Manager</title>
 <conbody>
  <p>The connection manager allows you to reuse connections. When making multiple queries to a
   single server (e.g., accessing Amazon S3), this can be critical for creating efficient code. A
   manager will keep track of multiple connections to a given server (taking into account port and
   SSL as well), automatically reaping unused connections as needed. When you make a request,
    <codeph>http-conduit</codeph> first tries to check out an existing connection. When you're
   finished with the connection (if the server allows keep-alive), the connection is returned to the
   manager. If anything goes wrong, the connection is closed.</p>
  <p>To keep our code exception-safe, we use the <codeph>ResourceT</codeph> monad transformer. All
   this means for you is that your code needs to be wrapped inside a call to
    <codeph>runResourceT</codeph>, either implicitly or explicitly, and that code inside that block
   will need to <codeph>liftIO</codeph> to perform normal IO actions.</p>
  <p>There are two ways you can get ahold of a manager. <codeph>newManager</codeph> will return a
   manager that will not be automatically closed (you can use <codeph>closeManager</codeph> to do so
   manually), while <codeph>withManager</codeph> will start a new <codeph>ResourceT</codeph> block,
   allow you to use the manager, and then automatically close the <codeph>ResourceT</codeph> when
   you're done. If you want to use a <codeph>ResourceT</codeph> for an entire application, and have
   no need to close it, you should probably use <codeph>newManager</codeph>.</p>
  <p>One other thing to point out: you obviously don't want to create a new manager for each and
   every request; that would defeat the whole purpose. You should create your
    <codeph>Manager</codeph> early and then share it.</p>
 </conbody>
</concept>
