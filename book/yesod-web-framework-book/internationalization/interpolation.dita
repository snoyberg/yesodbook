<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="interpolation">
 <title>Interpolation</title>
 <conbody>
  <p>One way to use your new RenderMessage instance would be to directly call the
    <codeph>renderMessage</codeph> function. This would work, but it's a bit tedious: you need to
   pass in the foundation value and the language list manually. Instead, Hamlet provides a
   specialized i18n interpolation, which looks like <codeph>_{...}</codeph>.</p>
  <note>Why the underscore? Underscore is already a well-established character for i18n, as it is
   used in the gettext library.</note>
  <p>Hamlet will then automatically translate that to a call to <codeph>renderMessage</codeph>. Once
   Hamlet gets the output Text value, it uses the <codeph>toHtml</codeph> function to produce an
    <codeph>Html</codeph> value, meaning that any special characters (&lt;, &amp;, >) will be
   automatically escaped.</p>
 </conbody>
</concept>
