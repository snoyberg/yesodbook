<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="stateless"><title id="x-1">Stateless</title><conbody id="x-2"><p id="stateless1">I've saved this section for the last, not because it is less important, but rather because there are no specific features in Yesod to enforce this.</p><p id="stateless2">HTTP is a stateless protocol: each request is to be seen as the beginning of a conversation. This means, for instance, it doesn't matter to the server if you requested five pages previously, it will treat your sixth request as if it's your first one.</p><p id="stateless3">On the other hand, some features on websites won't work without some kind of state. For example, how can you implement a shopping cart without saving information about items in between requests?</p><p id="stateless4">The solution to this is cookies, and built on top of this, sessions. We have a <xref id="x1" href="../sessions/sessions.dita">whole section</xref> addressing the sessions features in Yesod. However, I cannot stress enough that this should be used sparingly.</p><p id="stateless5">Let me give you an example. There's a popular bug tracking system that I deal with on a daily basis which horribly abuses sessions. There's a little drop-down on every page to select the current project. Seems harmless, right? What that dropdown does is set the current project in your session.</p><p id="stateless6">The result of all this is that clicking on the "view issues" link is entirely dependent on the last project you selected. There's no way to create a bookmark to your "Yesod" issues and a separate link for your "Hamlet" issues.</p><p id="stateless7">The proper RESTful approach to this is to have one resource for all of the Yesod issues and a separate one for all the Hamlet issues. In Yesod, this is easily done with a route definition like:</p><codeblock outputclass="routes" id="x2">/ ProjectsR GET
/projects/#ProjectID ProjectIssuesR GET
/issues/#IssueID IssueR GET</codeblock><p id="stateless8">Be nice to your users: proper stateless architecture means that basic features like bookmarks, permalinks and the back/forward button will always work.</p></conbody></concept>