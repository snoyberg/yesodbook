<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="messages"><title id="x-1">Messages</title><conbody id="x-2"><p id="m1">One usage of sessions previously alluded to is messages. They come to solve a common
            problem in web development: the user performs a <codeph>POST</codeph> request, the web
            app makes a change, and then the web app wants to <i id="x1">simultaneously</i> redirect
            the user to a new page and send the user a success message. (This is known as
            Post/Redirect/Get.)</p><p id="m2">Yesod provides a pair of functions to make this very easy:
            <codeph id="x2">setMessage</codeph> stores a value in the session, and
            <codeph id="x3">getMessage</codeph> both reads the value most recently put into
            the session, and clears the old value so it does not accidently get
            displayed twice.</p><p id="m3">It is recommended to have a call to <codeph>getMessage</codeph> in <codeph id="x4"
                >defaultLayout</codeph> so that any available message is shown to a user
            immediately, without having to remember to add <codeph>getMessage</codeph> calls to
            every handler.</p>
        <codeblock id="x-3" outputclass="haskell">{-# LANGUAGE OverloadedStrings, TypeFamilies, TemplateHaskell,
             QuasiQuotes, MultiParamTypeClasses #-}
import Yesod

data Messages = Messages

mkYesod "Messages" [parseRoutes|
/ RootR GET
/set-message SetMessageR POST
|]

instance Yesod Messages where
    defaultLayout widget = do
        pc &lt;- widgetToPageContent widget
        mmsg &lt;- getMessage
        hamletToRepHtml [hamlet|
$doctype 5
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;#{pageTitle pc}
        ^{pageHead pc}
    &lt;body&gt;
        $maybe msg &lt;- mmsg
            &lt;p&gt;Your message was: #{msg}
        ^{pageBody pc}
|]

instance RenderMessage Messages FormMessage where
    renderMessage _ _ = defaultFormMessage

getRootR :: Handler RepHtml
getRootR = defaultLayout [whamlet|
&lt;form method=post action=@{SetMessageR}&gt;
    My message is: #
    &lt;input type=text name=message&gt;
    &lt;input type=submit&gt;
|]

postSetMessageR :: Handler ()
postSetMessageR = do
    msg &lt;- runInputPost $ ireq textField "message"
    setMessage $ toHtml msg
    redirect RootR

main :: IO ()
main = warpDebug 3000 Messages</codeblock>
        <fig id="x-4">
            <title id="x-5">Initial page load, no message</title>
            <image href="messages-1.png" id="image_oka_gxb_yd"/>
        </fig>
        <fig id="x-6">
            <title id="x-7">New message entered in text box</title>
            <image href="messages-2.png" id="image_bqu_hxb_yd"/>
        </fig>
        <fig id="x-8">
            <title id="x-9">After form submit, message appears at top of page</title>
            <image href="messages-3.png" id="image_qhn_jxb_yd"/>
        </fig>
        <fig id="x-10">
            <title id="x-11">After refresh, the message is cleared</title>
            <image href="messages-4.png" id="image_sjp_kxb_yd"/>
        </fig></conbody></concept>
