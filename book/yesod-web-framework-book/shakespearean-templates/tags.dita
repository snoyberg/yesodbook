<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="tags"><title id="x-1">Tags</title><conbody id="x-2">  <p id="x1">Obviously tags will play an important part of any HTML template language. In Hamlet, we try to
   stick very close to existing HTML syntax to make the language more comfortable. However, instead
   of using closing tags to denote nesting, we use indentation. So something like this in
   HTML:<codeblock outputclass="html" id="x2">&lt;body&gt;
&lt;p&gt;Some paragraph.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;</codeblock>would
   be<codeblock outputclass="hamlet" id="x3">&lt;body&gt;
    &lt;p&gt;Some paragraph.
    &lt;ul&gt;
        &lt;li&gt;Item 1
        &lt;li&gt;Item 2</codeblock></p>
  <p id="x4">In general, we find this to be easier to follow than HTML once you get accustomed to it. The
   only tricky part comes with dealing with whitespace before and after tags. For example, let's say
   you want to create the
   HTML<codeblock outputclass="html" id="x5">&lt;p&gt;Paragraph &lt;i&gt;italic&lt;/i&gt; end.&lt;/p&gt;</codeblock>We want to make sure
   that there is a whitespace preserved after the word "Paragraph" and before the word "end". To do
   so, we use two simple escape
   characters:<codeblock outputclass="hamlet" id="x6">&lt;p&gt;
    Paragraph #
    &lt;i&gt;italic
    \ end.</codeblock>The
   whitespace escape rules are actually very simple:<ol id="ol_kvy_tku_id">
    <li id="x7">If the first non-space character in a line is a backslash, the backslash is ignored.</li>
    <li id="x8">If the last character in a line is a hash, it is ignored.</li>
   </ol></p>
  <p id="x9">One other thing. Hamlet does <b id="x10">not</b> escape entities within its content.
   This is done on purpose to allow existing HTML to be more easily copied in. So the example above
   could also be written
   as:<codeblock outputclass="hamlet" id="x11">&lt;p&gt;Paragraph &lt;i&gt;italic&lt;/i&gt; end.</codeblock>Notice
   that the first tag will be automatically closed by Hamlet, while the inner "i" tag will not. You
   are free to use whichever approach you want, there is no penalty for either choice. Be aware,
   however, that the <b id="x-3">only</b> time you use closing tags in Hamlet is for such inline tags; normal
   tags are not closed.</p>
 </conbody></concept>