<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conceptId">
 <title id="x-1">A note about file paths</title>
 <conbody id="x-2">
  <p id="x-3">In the type signature above, we have a type <codeph id="x-4">FilePath</codeph>. However, <b id="x-5">this isn't
     <codeph id="x-6">Prelude.FilePath</codeph></b>. The standard <codeph id="x-7">Prelude</codeph> defines a type
   synonym <codeph id="x-8">type FilePath = [Char]</codeph>. Unfortunately, there are many limitations to
   using such an approach, including confusion of filename character encodings and differences in
   path separators.</p>
  <p id="x-9">Instead, <codeph id="x-10">xml-conduit</codeph> uses the <apiname id="x-11">system-filepath</apiname> package,
   which defines an abstract <codeph id="x-12">FilePath</codeph> type. I've personally found this to be a much
   nicer approach to work with. The package is fairly easy to follow, so I won't go into details
   here. But I do want to give a few quick explanations of how to use it:</p>
  <ul id="ul_lgl_lyb_we">
   <li id="x-13">Since a <codeph id="x-14">FilePath</codeph> is an instance of <codeph id="x-15">IsString</codeph>, you can type
    in regular strings and they will be treated properly, as long as the
     <codeph id="x-16">OverloadedStrings</codeph> extension is enabled. (I highly recommend enabling it
    anyway, as it makes dealing with <codeph id="x-17">Text</codeph> values much more pleasant.)</li>
   <li id="x-18">If you need to explicitly convert to or from <codeph id="x-19">Prelude</codeph>'s
     <codeph id="x-20">FilePath</codeph>, you should use the
     <apiname id="x-21">system-filepath:Filesystem.Path.CurrentOS:encodeString</apiname> and
     <apiname id="x-22">system-filepath:Filesystem.Path.CurrentOS:decodeString</apiname>, respectively. This
    takes into account file path encodings.</li>
   <li id="x-23">Instead of manually splicing together directory names and file names with extensions, use the
    operators in the <codeph id="x-24">Filesystem.Path.CurrentOS</codeph> module, e.g. <codeph id="x-25">myfolder &lt;/&gt;
     filename &lt;.&gt; extension</codeph>.</li>
  </ul>
 </conbody>
</concept>
