<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="custom-error-pages"><title id="x-1">Custom error pages</title><conbody id="x-2"><p id="cep1">One of the marks of a professional web site is a properly designed error page. Yesod gets you a long way there by automatically using your defaultLayout for displaying error pages. But sometimes, you'll want to go even further. For this, you'll want to override the errorHandler method:</p><codeblock id="x1" outputclass="haskell">{-# LANGUAGE TypeFamilies, QuasiQuotes, OverloadedStrings #-}
{-# LANGUAGE MultiParamTypeClasses, TemplateHaskell #-}
import Yesod
data Layout = Layout
mkYesod "Layout" [parseRoutes|/ RootR GET|]
instance Yesod Layout where
    approot _ = ""
-- START
    errorHandler NotFound = fmap chooseRep $ defaultLayout $ do
        setTitle "Request page not located"
        toWidget [hamlet|
&lt;h1&gt;Not Found
&lt;p&gt;We appologize for the inconvenience, but the requested page could not be located.
|]
    errorHandler other = defaultErrorHandler other
-- STOP
getRootR = defaultLayout [whamlet|Hello World|]
main = warpDebug 4000 Layout
</codeblock><p id="cep2">Here we specify a custom 404 error page. We can also use the defaultErrorHandler when we don't want to write a custom handler for each error type. Due to type constraints, we need to start off our methods with "fmap chooseRep", but otherwise you can write a typical handler function.</p><p id="cep3">In fact, you could even use special responses like redirects:</p><codeblock id="x2" outputclass="haskell">{-# LANGUAGE TypeFamilies, QuasiQuotes, OverloadedStrings #-}
{-# LANGUAGE MultiParamTypeClasses, TemplateHaskell #-}
import Yesod
data Layout = Layout
mkYesod "Layout" [parseRoutes|/ RootR GET|]
instance Yesod Layout where
    approot _ = ""
-- START
    errorHandler NotFound = redirect RootR
    errorHandler other = defaultErrorHandler other
-- STOP
getRootR = defaultLayout [whamlet|Hello World|]
main = warpDebug 4000 Layout
</codeblock><note id="x3">Even though you <i id="x4">can</i> do this, I don't actually recommend such practices. A 404 should be a 404.</note></conbody></concept>
