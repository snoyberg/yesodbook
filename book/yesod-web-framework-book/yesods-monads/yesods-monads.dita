<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conceptId">
 <title id="x-1">Yesod's Monads</title>
 <conbody id="x-2">
  <p id="x-3">As you've read through this book, there have been a number of monads which have
   appeared: <codeph id="x-6">Handler</codeph>, <codeph id="x-7">Widget</codeph> and
    <codeph>YesodDB</codeph> (for Persistent). As with most monads, each one provides some specific
   functionality: <codeph id="x-9">Handler</codeph> gives access to the request and allows you to
   send responses, a <codeph id="x-10">Widget</codeph> contains HTML, CSS, and Javascript, and
    <codeph id="x-11">YesodDB</codeph> let's you make database queries. In Model-View-Controller
   (MVC) terms, we could consider <codeph>YesodDB</codeph> to be the model, <codeph>Widget</codeph>
   to be the view, and <codeph>Handler</codeph> to be the controller.</p>
  <p id="x-4">So far, we've presented some very straight-forward ways to use these monads: your main
   handler will run in <codeph id="x-12">Handler</codeph>, using <codeph id="x-13">runDB</codeph> to execute a
    <codeph id="x-14">YesodDB</codeph> query, and <codeph id="x-15">defaultLayout</codeph> to return a
   <codeph id="x-16">Widget</codeph>, which in turn was created by calls to <codeph id="x-17">toWidget</codeph>.</p>
  <p id="x-5">However, if we have a deeper understanding of these types, we can achieve some fancier
   results.</p>
 </conbody>
</concept>
